!function(t){var e={};function i(n){if(e[n])return e[n].exports;var s=e[n]={i:n,l:!1,exports:{}};return t[n].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)i.d(n,s,function(e){return t[e]}.bind(null,s));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){"use strict";i.r(e);var n=function(){function t(t,e){this.x=t,this.y=e,this.magnitude=Math.sqrt(t^2+e^2)}return t.prototype.set=function(t,e){this.x=t,this.y=e,this.magnitude=Math.sqrt(t^2+e^2)},t.prototype.setMag=function(t){var e=Math.atan2(this.y,this.x);this.x=Math.cos(e)*t,this.y=Math.sin(e)*t,this.magnitude=t},t.prototype.heading=function(){return Math.atan2(this.y,this.x)},t.prototype.mult=function(t){this.x=this.x*t,this.y=this.y*t},t.add=function(e,i){return new t(e.x+i.x,e.y+i.y)},t.sub=function(e,i){return new t(e.x-i.x,e.y-i.y)},t}(),s=function(){function t(t,e,i,s,h){this.a=new n(t,e),this.len=i,this.angle=s;var o=this.len*Math.cos(this.angle),a=this.len*Math.sin(this.angle);this.b=new n(this.a.x+o,this.a.y+a),void 0!==h?(this.parent=h,this.a=new n(this.parent.b.x,this.parent.b.y)):this.parent=null,this.calculateB()}return t.prototype.follow=function(t,e,i){var s=new n(t,e),h=n.sub(s,this.a);this.angle=h.heading(),null!==this.parent?(h.setMag(this.len),h.mult(-1),this.a=n.add(s,h)):void 0!==i&&(i.a.x=this.b.x,i.a.y=this.b.y)},t.prototype.calculateB=function(){var t=this.len*Math.cos(this.angle),e=this.len*Math.sin(this.angle);this.b.set(this.a.x+t,this.a.y+e)},t.prototype.update=function(){this.calculateB()},t.prototype.draw=function(t){t.beginPath(),t.moveTo(this.a.x,this.a.y),t.lineTo(this.b.x,this.b.y),t.stroke()},t}(),h=function(){function t(t,e){this.len=40,this.reachCount=30,this.x=t,this.y=e}return t.prototype.move=function(){this.reachCount--,this.x+=2},t}(),o=function(){function t(t,e,i,n){this.ticks=1,this.x=t,this.y=e,this.h=i,this.w=n,this.leg1seg1=new s(this.x+this.w,this.y,20,225*Math.PI/180),this.leg1seg2=new s(0,0,20,0,this.leg1seg1),this.leg1Target=new h(t+this.w+10,e-10)}return t.prototype.update=function(){this.ticks++,this.x++,this.leg1seg1.a.x++,this.leg1seg2.follow(this.leg1Target.x,this.leg1Target.y),this.leg1seg2.update(),this.leg1seg1.follow(this.leg1seg2.a.x,this.leg1seg2.a.y,this.leg1seg2),this.leg1seg1.update(),this.calculateLegDistance(this.leg1seg1,this.leg1seg2)<=this.leg1Target.len&&this.leg1Target.reachCount>0?this.leg1Target.move():this.calculateLegDistance(this.leg1seg1,this.leg1seg2)<20&&0===this.leg1Target.reachCount&&(this.leg1Target.reachCount=30)},t.prototype.calculateLegDistance=function(t,e){var i=e.b.x-t.a.x,n=e.b.y-t.a.y,s=Math.sqrt(i*i+n*n);return console.log(s),s},t.prototype.lungeLeg=function(){return this.x+this.ticks},t.prototype.draw=function(t){this.leg1seg1.draw(t),this.leg1seg2.draw(t),t.fillStyle="grey",t.fillRect(this.x,this.y,this.w,this.h)},t}(),a=document.getElementById("gameScreen"),r=a.getContext("2d"),l=a.getBoundingClientRect(),u=0,g=0,c=new s(300,200,100,0),f=new s(0,0,100,0,c),p=new o(250,250,25,25);setInterval(function(){p.update(),f.follow(g,u),f.update(),c.follow(f.a.x,f.a.y,f),c.update(),r.clearRect(0,0,a.width,a.height),p.draw(r),c.draw(r),f.draw(r)},12),a.addEventListener("mousemove",function(t){g=(t.clientX-l.left)/(l.right-l.left)*a.width,u=(t.clientY-l.top)/(l.bottom-l.top)*a.height},!1)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,