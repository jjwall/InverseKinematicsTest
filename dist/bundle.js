!function(t){var e={};function i(n){if(e[n])return e[n].exports;var s=e[n]={i:n,l:!1,exports:{}};return t[n].call(s.exports,s,s.exports,i),s.l=!0,s.exports}i.m=t,i.c=e,i.d=function(t,e,n){i.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},i.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},i.t=function(t,e){if(1&e&&(t=i(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(i.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var s in t)i.d(n,s,function(e){return t[e]}.bind(null,s));return n},i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,"a",e),e},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},i.p="",i(i.s=0)}([function(t,e,i){"use strict";i.r(e);var n=function(){function t(t,e){this.x=t,this.y=e,this.magnitude=Math.sqrt(t^2+e^2)}return t.prototype.set=function(t,e){this.x=t,this.y=e,this.magnitude=Math.sqrt(t^2+e^2)},t.prototype.setMag=function(t){var e=Math.atan2(this.y,this.x);this.x=Math.cos(e)*t,this.y=Math.sin(e)*t,this.magnitude=t},t.prototype.heading=function(){return Math.atan2(this.y,this.x)},t.prototype.mult=function(t){this.x=this.x*t,this.y=this.y*t},t.add=function(e,i){return new t(e.x+i.x,e.y+i.y)},t.sub=function(e,i){return new t(e.x-i.x,e.y-i.y)},t}(),s=function(){function t(t,e,i,s,h){this.a=new n(t,e),this.len=i,this.angle=s;var o=this.len*Math.cos(this.angle),a=this.len*Math.sin(this.angle);this.b=new n(this.a.x+o,this.a.y+a),void 0!==h?(this.parent=h,this.a=new n(this.parent.b.x,this.parent.b.y)):this.parent=null,this.calculateB()}return t.prototype.follow=function(t,e,i){var s=new n(t,e),h=n.sub(s,this.a);this.angle=h.heading(),null!==this.parent?(h.setMag(this.len),h.mult(-1),this.a=n.add(s,h)):void 0!==i&&(i.a.x=this.b.x,i.a.y=this.b.y)},t.prototype.calculateB=function(){var t=this.len*Math.cos(this.angle),e=this.len*Math.sin(this.angle);this.b.set(this.a.x+t,this.a.y+e)},t.prototype.update=function(){this.calculateB()},t.prototype.draw=function(t){t.beginPath(),t.moveTo(this.a.x,this.a.y),t.lineTo(this.b.x,this.b.y),t.stroke()},t}(),h=function(){function t(t,e){this.len=40,this.reachCount=25,this.x=t,this.y=e}return t.prototype.reach=function(){this.reachCount>0&&(this.reachCount--,this.x+=2)},t}(),o=function(){function t(t,e,i,n){this.ticks=1,this.x=t,this.y=e,this.h=i,this.w=n,this.leg1seg1=new s(this.x+this.w,this.y,20,225*Math.PI/180),this.leg1seg2=new s(0,0,20,0,this.leg1seg1),this.leg1Target=new h(t+this.w+10,e-5)}return t.prototype.update=function(){this.ticks++,this.x++,this.leg1seg1.a.x++,this.leg1seg2.follow(this.leg1Target.x,this.leg1Target.y),this.leg1seg2.update(),this.leg1seg1.follow(this.leg1seg2.a.x,this.leg1seg2.a.y,this.leg1seg2),this.leg1seg1.update(),this.calculateLegDistance(this.leg1seg1,this.leg1seg2)>this.leg1Target.len&&(this.leg1Target.reachCount=70),this.leg1Target.reach()},t.prototype.calculateLegDistance=function(t,e){var i=e.b.x-t.a.x,n=e.b.y-t.a.y,s=Math.sqrt(i*i+n*n);return console.log(s),s},t.prototype.lungeLeg=function(){return this.x+this.ticks},t.prototype.draw=function(t){t.fillStyle="grey",t.fillRect(this.x,this.y,this.w,this.h),this.leg1seg1.draw(t),this.leg1seg2.draw(t)},t}(),a=document.getElementById("gameScreen"),r=a.getContext("2d"),l=a.getBoundingClientRect(),u=0,c=0,g=new s(300,200,100,0),f=new s(0,0,100,0,g),p=new o(250,250,25,25);setInterval(function(){p.update(),f.follow(c,u),f.update(),g.follow(f.a.x,f.a.y,f),g.update(),r.clearRect(0,0,a.width,a.height),p.draw(r),g.draw(r),f.draw(r)},12),a.addEventListener("mousemove",function(t){c=(t.clientX-l.left)/(l.right-l.left)*a.width,u=(t.clientY-l.top)/(l.bottom-l.top)*a.height},!1)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vc3JjL1BWZWN0b3IudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL1NlZ21lbnQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL0VudGl0eS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOlsiaW5zdGFsbGVkTW9kdWxlcyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJpIiwibCIsIm1vZHVsZXMiLCJjYWxsIiwibSIsImMiLCJkIiwibmFtZSIsImdldHRlciIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJyIiwiU3ltYm9sIiwidG9TdHJpbmdUYWciLCJ2YWx1ZSIsInQiLCJtb2RlIiwiX19lc01vZHVsZSIsIm5zIiwiY3JlYXRlIiwia2V5IiwiYmluZCIsIm4iLCJvYmplY3QiLCJwcm9wZXJ0eSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwicCIsInMiLCJQVmVjdG9yIiwiWCIsIlkiLCJ0aGlzIiwieCIsInkiLCJtYWduaXR1ZGUiLCJNYXRoIiwic3FydCIsInNldCIsInNldE1hZyIsIk1hZ25pdHVkZSIsImFuZ2xlIiwiYXRhbjIiLCJjb3MiLCJzaW4iLCJoZWFkaW5nIiwibXVsdCIsIk11bHRpcGxlIiwiYWRkIiwiQSIsIkIiLCJzdWIiLCJTZWdtZW50X1NlZ21lbnQiLCJTZWdtZW50IiwiTGVuIiwiQW5nbGUiLCJQYXJlbnQiLCJhIiwibGVuIiwiZHgiLCJkeSIsImIiLCJ1bmRlZmluZWQiLCJwYXJlbnQiLCJjYWxjdWxhdGVCIiwiZm9sbG93IiwidGFyZ2V0WCIsInRhcmdldFkiLCJjaGlsZCIsInRhcmdldCIsImRpciIsInVwZGF0ZSIsImRyYXciLCJjdHgiLCJiZWdpblBhdGgiLCJtb3ZlVG8iLCJsaW5lVG8iLCJzdHJva2UiLCJMZWdUYXJnZXQiLCJyZWFjaENvdW50IiwicmVhY2giLCJFbnRpdHlfRW50aXR5IiwiRW50aXR5IiwiSCIsIlciLCJ0aWNrcyIsImgiLCJ3IiwibGVnMXNlZzEiLCJQSSIsImxlZzFzZWcyIiwibGVnMVRhcmdldCIsImNhbGN1bGF0ZUxlZ0Rpc3RhbmNlIiwiU2VnMSIsIlNlZzIiLCJ2MSIsInYyIiwiZGlzdCIsImNvbnNvbGUiLCJsb2ciLCJsdW5nZUxlZyIsImZpbGxTdHlsZSIsImZpbGxSZWN0IiwiY2FudmFzIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImdldENvbnRleHQiLCJyZWN0IiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwibW91c2VZIiwibW91c2VYIiwic2VnMSIsInNlZzIiLCJlbnQiLCJzZXRJbnRlcnZhbCIsImNsZWFyUmVjdCIsIndpZHRoIiwiaGVpZ2h0IiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2dCIsImNsaWVudFgiLCJsZWZ0IiwicmlnaHQiLCJjbGllbnRZIiwidG9wIiwiYm90dG9tIl0sIm1hcHBpbmdzIjoiYUFDQSxJQUFBQSxLQUdBLFNBQUFDLEVBQUFDLEdBR0EsR0FBQUYsRUFBQUUsR0FDQSxPQUFBRixFQUFBRSxHQUFBQyxRQUdBLElBQUFDLEVBQUFKLEVBQUFFLElBQ0FHLEVBQUFILEVBQ0FJLEdBQUEsRUFDQUgsWUFVQSxPQU5BSSxFQUFBTCxHQUFBTSxLQUFBSixFQUFBRCxRQUFBQyxJQUFBRCxRQUFBRixHQUdBRyxFQUFBRSxHQUFBLEVBR0FGLEVBQUFELFFBS0FGLEVBQUFRLEVBQUFGLEVBR0FOLEVBQUFTLEVBQUFWLEVBR0FDLEVBQUFVLEVBQUEsU0FBQVIsRUFBQVMsRUFBQUMsR0FDQVosRUFBQWEsRUFBQVgsRUFBQVMsSUFDQUcsT0FBQUMsZUFBQWIsRUFBQVMsR0FBMENLLFlBQUEsRUFBQUMsSUFBQUwsS0FLMUNaLEVBQUFrQixFQUFBLFNBQUFoQixHQUNBLG9CQUFBaUIsZUFBQUMsYUFDQU4sT0FBQUMsZUFBQWIsRUFBQWlCLE9BQUFDLGFBQXdEQyxNQUFBLFdBRXhE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QUFJekMsS0FBS0MsR0FDVHNDLEVBQUt2QyxLQUFLQyxHQUNWdUMsRUFBS3hDLEtBQUtDLElBT1gsSUFFSDhCLEVBQU9lLGlCQUFpQixZQUFhLFNBQVVDLEdBQzNDVCxHQUFVUyxFQUFJQyxRQUFVYixFQUFLYyxPQUFTZCxFQUFLZSxNQUFRZixFQUFLYyxNQUFRbEIsRUFBT2EsTUFDdkVQLEdBQVVVLEVBQUlJLFFBQVVoQixFQUFLaUIsTUFBUWpCLEVBQUtrQixPQUFTbEIsRUFBS2lCLEtBQU9yQixFQUFPYyxTQUN2RSIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMCk7XG4iLCIvKiogaW1wbGVtZW50YXRpb24gb2YgSmF2YSdzIFByb2Nlc3NpbmcgUFZlY3RvciAqL1xyXG5leHBvcnQgY2xhc3MgUFZlY3RvciB7XHJcbiAgICB4OiBudW1iZXI7XHJcbiAgICB5OiBudW1iZXI7XHJcbiAgICBtYWduaXR1ZGU6IG51bWJlcjtcclxuICAgIGNvbnN0cnVjdG9yKFg6IG51bWJlciwgWTogbnVtYmVyKSB7XHJcbiAgICAgICAgdGhpcy54ID0gWDtcclxuICAgICAgICB0aGlzLnkgPSBZO1xyXG4gICAgICAgIHRoaXMubWFnbml0dWRlID0gTWF0aC5zcXJ0KChYXjIgKyBZXjIpKTtcclxuICAgIH1cclxuXHJcbiAgICAvKiogc2V0IHggYW5kIHkgd2l0aG91dCBhbGxvY2F0aW5nIG5ldyBQVmVjdG9yICovXHJcbiAgICBzZXQoWDogbnVtYmVyLCBZOiBudW1iZXIpIDogdm9pZCB7XHJcbiAgICAgICAgdGhpcy54ID0gWDtcclxuICAgICAgICB0aGlzLnkgPSBZO1xyXG4gICAgICAgIHRoaXMubWFnbml0dWRlID0gTWF0aC5zcXJ0KChYXjIgKyBZXjIpKTtcclxuICAgIH1cclxuXHJcbiAgICAvKiogc2V0cyB0aGUgbWFnbml0dWRlIChsZW5ndGgpIG9mIHZlY3RvclxyXG4gICAgICogIGZpbmRzIG5ldyB4IGFuZCB5IGNvb3JkaW5hdGVzXHJcbiAgICAgKi9cclxuICAgIHNldE1hZyhNYWduaXR1ZGU6IG51bWJlcikgOiB2b2lkIHtcclxuICAgICAgICBjb25zdCBhbmdsZSA9IE1hdGguYXRhbjIodGhpcy55LCB0aGlzLngpO1xyXG4gICAgICAgIHRoaXMueCA9IE1hdGguY29zKGFuZ2xlKSAqIE1hZ25pdHVkZTtcclxuICAgICAgICB0aGlzLnkgPSBNYXRoLnNpbihhbmdsZSkgKiBNYWduaXR1ZGU7XHJcbiAgICAgICAgdGhpcy5tYWduaXR1ZGUgPSBNYWduaXR1ZGU7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIHJldHVybnMgYW5nbGUgb2YgdmVjdG9yICovXHJcbiAgICBoZWFkaW5nKCkgOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiBNYXRoLmF0YW4yKHRoaXMueSwgdGhpcy54KTtcclxuICAgIH1cclxuXHJcbiAgICAvKiogbXVsdGlwbGllcyB0aGUgY29tcG9uZW50cyBvZiB0aGUgdmVjIGJ5IHNvbWUgbnVtYmVyICAqL1xyXG4gICAgbXVsdChNdWx0aXBsZTogbnVtYmVyKSA6IHZvaWQge1xyXG4gICAgICAgIHRoaXMueCA9IHRoaXMueCAqIE11bHRpcGxlO1xyXG4gICAgICAgIHRoaXMueSA9IHRoaXMueSAqIE11bHRpcGxlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiByZXR1cm5zIG5ldyB2ZWMgb2YgdmVjIEEgcGx1cyB2ZWMgQiAqL1xyXG4gICAgc3RhdGljIGFkZChBOiBQVmVjdG9yLCBCOiBQVmVjdG9yKSA6IFBWZWN0b3Ige1xyXG4gICAgICAgIGNvbnN0IHggPSBBLnggKyBCLng7XHJcbiAgICAgICAgY29uc3QgeSA9IEEueSArIEIueTtcclxuICAgICAgICByZXR1cm4gbmV3IFBWZWN0b3IoeCwgeSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIHJldHVybnMgbmV3IHZlYyBvZiB2ZWMgQiBzdWJ0cmFjdGVkIGZyb20gdmVjIEEgKi9cclxuICAgIHN0YXRpYyBzdWIoQTogUFZlY3RvciwgQjogUFZlY3RvcikgOiBQVmVjdG9yIHtcclxuICAgICAgICBjb25zdCB4ID0gQS54IC0gQi54O1xyXG4gICAgICAgIGNvbnN0IHkgPSBBLnkgLSBCLnk7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQVmVjdG9yKHgsIHkpXHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBQVmVjdG9yIH0gZnJvbSBcIi4vUFZlY3RvclwiO1xyXG5cclxuZXhwb3J0IGNsYXNzIFNlZ21lbnQge1xyXG4gICAgYTogUFZlY3RvcjtcclxuICAgIGFuZ2xlOiBudW1iZXI7XHJcbiAgICBsZW46IG51bWJlcjtcclxuICAgIGI6IFBWZWN0b3I7XHJcbiAgICBwYXJlbnQ6IFNlZ21lbnQ7XHJcbiAgICBjb25zdHJ1Y3RvcihYOiBudW1iZXIsIFk6IG51bWJlciwgTGVuOiBudW1iZXIsIEFuZ2xlOiBudW1iZXIsIFBhcmVudD86IFNlZ21lbnQpIHtcclxuICAgICAgICB0aGlzLmEgPSBuZXcgUFZlY3RvcihYLCBZKTtcclxuICAgICAgICB0aGlzLmxlbiA9IExlbjtcclxuICAgICAgICB0aGlzLmFuZ2xlID0gQW5nbGU7XHJcblxyXG4gICAgICAgIGNvbnN0IGR4OiBudW1iZXIgPSB0aGlzLmxlbiAqIE1hdGguY29zKHRoaXMuYW5nbGUpO1xyXG4gICAgICAgIGNvbnN0IGR5OiBudW1iZXIgPSB0aGlzLmxlbiAqIE1hdGguc2luKHRoaXMuYW5nbGUpO1xyXG4gICAgICAgIHRoaXMuYiA9IG5ldyBQVmVjdG9yKHRoaXMuYS54ICsgZHgsIHRoaXMuYS55ICsgZHkpO1xyXG5cclxuICAgICAgICBpZiAoUGFyZW50ICE9PSB1bmRlZmluZWQpIHtcclxuICAgICAgICAgICAgdGhpcy5wYXJlbnQgPSBQYXJlbnRcclxuICAgICAgICAgICAgdGhpcy5hID0gbmV3IFBWZWN0b3IodGhpcy5wYXJlbnQuYi54LCB0aGlzLnBhcmVudC5iLnkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5wYXJlbnQgPSBudWxsO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5jYWxjdWxhdGVCKCk7XHJcbiAgICB9XHJcblxyXG4gICAgZm9sbG93KHRhcmdldFg6IG51bWJlciwgdGFyZ2V0WTogbnVtYmVyLCBjaGlsZD86IFNlZ21lbnQpIHtcclxuICAgICAgICBsZXQgdGFyZ2V0ID0gbmV3IFBWZWN0b3IodGFyZ2V0WCwgdGFyZ2V0WSk7XHJcbiAgICAgICAgbGV0IGRpciA9IFBWZWN0b3Iuc3ViKHRhcmdldCwgdGhpcy5hKTtcclxuICAgICAgICB0aGlzLmFuZ2xlID0gZGlyLmhlYWRpbmcoKTtcclxuXHJcblxyXG4gICAgICAgIGlmICh0aGlzLnBhcmVudCAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgICBkaXIuc2V0TWFnKHRoaXMubGVuKTtcclxuICAgICAgICAgICAgZGlyLm11bHQoLTEpO1xyXG4gICAgICAgICAgICB0aGlzLmEgPSBQVmVjdG9yLmFkZCh0YXJnZXQsIGRpcik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAoY2hpbGQgIT09IHVuZGVmaW5lZCkge1xyXG4gICAgICAgICAgICAgICAgLy8gdGhpcy5hLnggPSBjaGlsZC5iLng7XHJcbiAgICAgICAgICAgICAgICAvLyB0aGlzLmEueSA9IGNoaWxkLmIueTtcclxuICAgICAgICAgICAgICAgIGNoaWxkLmEueCA9IHRoaXMuYi54O1xyXG4gICAgICAgICAgICAgICAgY2hpbGQuYS55ID0gdGhpcy5iLnk7XHJcbiAgICAgICAgICAgICAgICAvLyBjaGlsZC5hLnNldE1hZyhNYXRoLnNxcnQoKHRoaXMuYS54KV4yICsgKHRoaXMuYS55KV4yKSk7XHJcbiAgICAgICAgICAgICAgICAvLyBjaGlsZC5iLnNldE1hZyhNYXRoLnNxcnQoKHRoaXMuYi54KV4yICsgKHRoaXMuYi55KV4yKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgY2FsY3VsYXRlQigpIDogdm9pZCB7XHJcbiAgICAgICAgY29uc3QgZHg6IG51bWJlciA9IHRoaXMubGVuICogTWF0aC5jb3ModGhpcy5hbmdsZSk7XHJcbiAgICAgICAgY29uc3QgZHk6IG51bWJlciA9IHRoaXMubGVuICogTWF0aC5zaW4odGhpcy5hbmdsZSk7XHJcbiAgICAgICAgdGhpcy5iLnNldCh0aGlzLmEueCArIGR4LCB0aGlzLmEueSArIGR5KTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGUoKSA6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuY2FsY3VsYXRlQigpO1xyXG4gICAgfVxyXG5cclxuICAgIGRyYXcoY3R4OiBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQpIDogdm9pZCB7XHJcbiAgICAgICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gICAgICAgIGN0eC5tb3ZlVG8odGhpcy5hLngsIHRoaXMuYS55KTtcclxuICAgICAgICBjdHgubGluZVRvKHRoaXMuYi54LCB0aGlzLmIueSk7XHJcbiAgICAgICAgY3R4LnN0cm9rZSgpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IHsgU2VnbWVudCB9IGZyb20gXCIuL1NlZ21lbnRcIjtcclxuXHJcbmNsYXNzIExlZ1RhcmdldCB7XHJcbiAgICB4OiBudW1iZXI7XHJcbiAgICB5OiBudW1iZXI7XHJcbiAgICBsZW46IG51bWJlcjtcclxuICAgIHJlYWNoQ291bnQ7XHJcbiAgICBjb25zdHJ1Y3RvcihYOiBudW1iZXIsIFk6IG51bWJlcikge1xyXG4gICAgICAgIHRoaXMubGVuID0gNDA7XHJcbiAgICAgICAgdGhpcy5yZWFjaENvdW50ID0gMjU7XHJcbiAgICAgICAgdGhpcy54ID0gWDtcclxuICAgICAgICB0aGlzLnkgPSBZO1xyXG4gICAgfVxyXG5cclxuICAgIHJlYWNoKCkge1xyXG4gICAgICAgIGlmICh0aGlzLnJlYWNoQ291bnQgPiAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMucmVhY2hDb3VudC0tO1xyXG4gICAgICAgICAgICB0aGlzLnggKz0gMjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBFbnRpdHkge1xyXG4gICAgeDogbnVtYmVyO1xyXG4gICAgeTogbnVtYmVyO1xyXG4gICAgaDogbnVtYmVyO1xyXG4gICAgdzogbnVtYmVyO1xyXG4gICAgbGVnMXNlZzE6IFNlZ21lbnQ7XHJcbiAgICBsZWcxc2VnMjogU2VnbWVudDtcclxuICAgIGxlZzFUYXJnZXQ6IExlZ1RhcmdldDtcclxuICAgIHRpY2tzOiBudW1iZXI7XHJcbiAgICBjb25zdHJ1Y3RvcihYOiBudW1iZXIsIFk6IG51bWJlciwgSDogbnVtYmVyLCBXOiBudW1iZXIpIHtcclxuICAgICAgICB0aGlzLnRpY2tzID0gMTtcclxuICAgICAgICB0aGlzLnggPSBYO1xyXG4gICAgICAgIHRoaXMueSA9IFk7XHJcbiAgICAgICAgdGhpcy5oID0gSDtcclxuICAgICAgICB0aGlzLncgPSBXXHJcbiAgICAgICAgdGhpcy5sZWcxc2VnMSA9IG5ldyBTZWdtZW50KHRoaXMueCArIHRoaXMudywgdGhpcy55LCAyMCwgMjI1ICogTWF0aC5QSS8xODApO1xyXG4gICAgICAgIHRoaXMubGVnMXNlZzIgPSBuZXcgU2VnbWVudCgwLCAwLCAyMCwgMCwgdGhpcy5sZWcxc2VnMSk7XHJcbiAgICAgICAgdGhpcy5sZWcxVGFyZ2V0ID0gbmV3IExlZ1RhcmdldChYICsgdGhpcy53ICsgMTAsIFkgLSA1KTsgXHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlKCkgOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnRpY2tzKys7XHJcbiAgICAgICAgdGhpcy54Kys7XHJcbiAgICAgICAgdGhpcy5sZWcxc2VnMS5hLngrKztcclxuICAgICAgICB0aGlzLmxlZzFzZWcyLmZvbGxvdyh0aGlzLmxlZzFUYXJnZXQueCwgdGhpcy5sZWcxVGFyZ2V0LnkpO1xyXG4gICAgICAgIHRoaXMubGVnMXNlZzIudXBkYXRlKCk7XHJcbiAgICAgICAgdGhpcy5sZWcxc2VnMS5mb2xsb3codGhpcy5sZWcxc2VnMi5hLngsIHRoaXMubGVnMXNlZzIuYS55LCB0aGlzLmxlZzFzZWcyKTtcclxuICAgICAgICB0aGlzLmxlZzFzZWcxLnVwZGF0ZSgpO1xyXG4gICAgICAgIC8vIG1vdmUgbGVnIHRlc3QgY29kZVxyXG4gICAgICAgIGlmICh0aGlzLmNhbGN1bGF0ZUxlZ0Rpc3RhbmNlKHRoaXMubGVnMXNlZzEsIHRoaXMubGVnMXNlZzIpID4gdGhpcy5sZWcxVGFyZ2V0Lmxlbikgey8vICYmIHRoaXMubGVnMVRhcmdldC5yZWFjaENvdW50ID09PSAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMubGVnMVRhcmdldC5yZWFjaENvdW50ID0gNzA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMubGVnMVRhcmdldC5yZWFjaCgpO1xyXG4gICAgfVxyXG5cclxuICAgIGNhbGN1bGF0ZUxlZ0Rpc3RhbmNlKFNlZzE6IFNlZ21lbnQsIFNlZzI6IFNlZ21lbnQpOiBudW1iZXIge1xyXG4gICAgICAgIHZhciB2MSA9IFNlZzIuYi54IC0gU2VnMS5hLng7XHJcbiAgICAgICAgdmFyIHYyID0gU2VnMi5iLnkgLSBTZWcxLmEueTtcclxuICAgICAgICB2YXIgZGlzdCA9IE1hdGguc3FydCh2MSp2MSArIHYyKnYyKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhkaXN0KTtcclxuICAgICAgICByZXR1cm4gZGlzdDtcclxuICAgIH1cclxuXHJcbiAgICBsdW5nZUxlZygpIDogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy54ICsgdGhpcy50aWNrcztcclxuICAgIH1cclxuXHJcbiAgICBkcmF3IChjdHg6IENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRCkgOiB2b2lkIHtcclxuICAgICAgICBjdHguZmlsbFN0eWxlID0gXCJncmV5XCI7XHJcbiAgICAgICAgY3R4LmZpbGxSZWN0KHRoaXMueCwgdGhpcy55LCB0aGlzLncsIHRoaXMuaCk7XHJcbiAgICAgICAgdGhpcy5sZWcxc2VnMS5kcmF3KGN0eCk7XHJcbiAgICAgICAgdGhpcy5sZWcxc2VnMi5kcmF3KGN0eCk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBTZWdtZW50IH0gZnJvbSBcIi4vU2VnbWVudFwiO1xyXG5pbXBvcnQgeyBFbnRpdHkgfSBmcm9tIFwiLi9FbnRpdHlcIjtcclxuLy8gc2V0IHVwIHN0YXRlXHJcbmNvbnN0IGNhbnZhcyA9IDxIVE1MQ2FudmFzRWxlbWVudD4gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2dhbWVTY3JlZW4nKTtcclxuY29uc3QgY3R4ID0gY2FudmFzLmdldENvbnRleHQoJzJkJyk7XHJcbmNvbnN0IHJlY3QgPSBjYW52YXMuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbmxldCBtb3VzZVkgPSAwO1xyXG5sZXQgbW91c2VYID0gMDtcclxubGV0IHNlZzEgPSBuZXcgU2VnbWVudCgzMDAsIDIwMCwgMTAwLCAwKTtcclxubGV0IHNlZzIgPSBuZXcgU2VnbWVudCgwLCAwLCAxMDAsIDAsIHNlZzEpO1xyXG5sZXQgZW50ID0gbmV3IEVudGl0eSgyNTAsIDI1MCwgMjUsIDI1KTtcclxuXHJcbmZ1bmN0aW9uIHVwZGF0ZSgpIDogdm9pZCB7XHJcbiAgICBlbnQudXBkYXRlKCk7XHJcbiAgICBzZWcyLmZvbGxvdyhtb3VzZVgsIG1vdXNlWSk7XHJcbiAgICAvLyBzZWcyLmxvY2tUb0NoaWxkQihzZWcxKTtcclxuICAgIHNlZzIudXBkYXRlKCk7XHJcbiAgICBzZWcxLmZvbGxvdyhzZWcyLmEueCwgc2VnMi5hLnksIHNlZzIpO1xyXG4gICAgLy8gc2VnMS5hLngrKztcclxuICAgIHNlZzEudXBkYXRlKCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGRyYXcoKSA6IHZvaWQge1xyXG4gICAgY3R4LmNsZWFyUmVjdCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpO1xyXG4gICAgZW50LmRyYXcoY3R4KTtcclxuICAgIHNlZzEuZHJhdyhjdHgpO1xyXG4gICAgc2VnMi5kcmF3KGN0eCk7XHJcbn1cclxuXHJcbi8vIG1haW4gbG9vcFxyXG5zZXRJbnRlcnZhbChmdW5jdGlvbigpIHtcclxuICAgIHVwZGF0ZSgpO1xyXG4gICAgZHJhdygpO1xyXG59LCAxMik7XHJcblxyXG5jYW52YXMuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vtb3ZlJywgZnVuY3Rpb24gKGV2dCkge1xyXG4gICAgbW91c2VYID0gKGV2dC5jbGllbnRYIC0gcmVjdC5sZWZ0KSAvIChyZWN0LnJpZ2h0IC0gcmVjdC5sZWZ0KSAqIGNhbnZhcy53aWR0aDtcclxuICAgIG1vdXNlWSA9IChldnQuY2xpZW50WSAtIHJlY3QudG9wKSAvIChyZWN0LmJvdHRvbSAtIHJlY3QudG9wKSAqIGNhbnZhcy5oZWlnaHQ7XHJcbn0sIGZhbHNlKTtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==