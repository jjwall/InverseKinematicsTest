!function(t){var e={};function n(i){if(e[i])return e[i].exports;var o=e[i]={i:i,l:!1,exports:{}};return t[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=t,n.c=e,n.d=function(t,e,i){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:i})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)n.d(i,o,function(e){return t[e]}.bind(null,o));return i},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=0)}([function(t,e,n){"use strict";n.r(e);var i=function(){function t(t,e){this.x=t,this.y=e,this.magnitude=Math.sqrt(t^2+e^2)}return t.prototype.set=function(t,e){this.x=t,this.y=e,this.magnitude=Math.sqrt(t^2+e^2)},t.prototype.setMag=function(t){var e=Math.atan2(this.y,this.x);this.x=Math.cos(e)*t,this.y=Math.sin(e)*t,this.magnitude=t},t.prototype.heading=function(){return Math.atan2(this.y,this.x)},t.prototype.mult=function(t){this.x=this.x*t,this.y=this.y*t},t.add=function(e,n){return new t(e.x+n.x,e.y+n.y)},t.sub=function(e,n){return new t(e.x-n.x,e.y-n.y)},t}(),o=function(){function t(t,e,n,o){this.a=new i(t,e),this.len=n,this.angle=o;var r=this.len*Math.cos(this.angle),a=this.len*Math.sin(this.angle);this.b=new i(this.a.x+r,this.a.y+a)}return t.prototype.follow=function(t,e){var n=new i(t,e),o=i.sub(n,this.a);this.angle=o.heading(),o.setMag(this.len),o.mult(-1),this.a=i.add(n,o)},t.prototype.calculateB=function(){var t=this.len*Math.cos(this.angle),e=this.len*Math.sin(this.angle);this.b.set(this.a.x+t,this.a.y+e)},t.prototype.update=function(){this.calculateB()},t.prototype.draw=function(t){t.beginPath(),t.moveTo(this.a.x,this.a.y),t.lineTo(this.b.x,this.b.y),t.stroke()},t}(),r=document.getElementById("gameScreen"),a=r.getContext("2d"),s=r.getBoundingClientRect(),u=0,h=0,l=new o(300,200,100,0);setInterval(function(){l.follow(h,u),l.update(),a.clearRect(0,0,r.width,r.height),l.draw(a)},12),r.addEventListener("mousemove",function(t){h=(t.clientX-s.left)/(s.right-s.left)*r.width,u=(t.clientY-s.top)/(s.bottom-s.top)*r.height},!1)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,